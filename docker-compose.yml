version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - VITE_STRIPE_PUBLIC_KEY=${VITE_STRIPE_PUBLIC_KEY}
      - VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
      - VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
      - VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - corestone-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${PGUSER:-corestone}
      - POSTGRES_PASSWORD=${PGPASSWORD:-corestone123}
      - POSTGRES_DB=${PGDATABASE:-corestone_grader}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - corestone-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - corestone-network

volumes:
  postgres_data:
    driver: local

networks:
  corestone-network:
    driver: bridge